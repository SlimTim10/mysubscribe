* Resources
- [[http://adrianmejia.com/blog/2014/09/28/angularjs-tutorial-for-beginners-with-nodejs-expressjs-and-mongodb/][AngularJS tutorial for beginners with NodeJS ExpressJS and MongoDB]]
- [[http://mherman.org/blog/2016/03/13/designing-a-restful-api-with-node-and-postgres/][Designing a RESTful API With Node and Postgres]]
- [[http://mherman.org/blog/2015/02/12/postgresql-and-nodejs/][PostgreSQL and NodeJS]]

* Tables
Users
| user_id | user_name |
|---------+-----------|
|     123 | Test1     |
|     345 | Test2     |
|     567 | Test3     |

Subscriptions
| subscription_id | url                      |
|-----------------+--------------------------|
|              12 | http://www.testsite1.com |
|              23 | http://www.testsite2.com |
|              34 | http://www.testsite3.com |

Directory
| user_id | subscription_id |
|---------+-----------------|
| 123     | 12              |
| 123     | 34              |
| 345     | 23              |
| 567     | 12              |
| 567     | 34              |

* Sample queries
INSERT INTO Directory (user_id, subscription_id)
VALUES (123, 12), (123, 34), (345, 23), (567, 12), (567, 34);

/* Query the attributes of all users for a given user ID */
SELECT u.*
FROM Users AS u JOIN Directory AS d ON (u.user_id = c.user_id)
WHERE c.user_id = 123;

/* Query the attributes of all subscriptions for a given subscription ID */
SELECT s.*
FROM Subscriptions AS s JOIN Directory AS d ON (s.subscription_id = c.subscription_id)
WHERE s.subscription_id = 34;

/* Query the subscription URLs for a given user ID */
SELECT s.url
FROM Subscriptions AS s JOIN Directory AS d ON (s.subscription_id = c.subscription_id)
WHERE c.user_id = 123;

* API
| URL                                                        | HTTP Verb | Action                                     |
|------------------------------------------------------------+-----------+--------------------------------------------|
| /api/users                                                 | GET       | Return all users                           |
| /api/users/:id                                             | GET       | Return a single user                       |
| /api/users                                                 | POST      | Add a user                                 |
| /api/users/:id                                             | PUT       | Update a user                              |
| /api/users/:id                                             | DELETE    | Delete a user                              |
| /api/subscriptions                                         | GET       | Return all subscriptions                   |
| /api/subscriptions/:id                                     | GET       | Return a single subscription               |
| /api/subscriptions                                         | POST      | Add a subscription                         |
| /api/subscriptions/:id                                     | PUT       | Update a subscription                      |
| /api/subscriptions/:id                                     | DELETE    | Delete a subscription                      |
| /api/directories/                                          | GET       | Return all user-subscription pairs         |
| /api/directories/user/:userID/subscription/:subscriptionID | GET       | Return a single user-subscription pair     |
| /api/directories/user/:userID                              | GET       | Return all subscriptions for a single user |
| /api/directories/subscription/:subscriptionID              | GET       | Return all users for a single subscription |
| /api/directories                                           | POST      | Add a user-subscription pair               |
| /api/directories/user/:userID/subscription/:subscriptionID | PUT       | Update a user-subscription pair            |
| /api/directories/user/:userID/subscription/:subscriptionID | DELETE    | Delete a user-subscription pair            |
